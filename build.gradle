plugins {
    id 'java'
    id 'maven'
    id 'idea'
    id 'org.springframework.boot' version "2.2.0.RELEASE"
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
    id 'war'
    id 'jacoco'
}

version="${applicationVersion}"

allprojects {
    group 'com.itembase'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
    // spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.kafka:spring-kafka:2.3.4.RELEASE'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // other dependencies
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'org.apache.logging.log4j:log4j-web'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    implementation 'com.googlecode.xmemcached:xmemcached:2.4.6'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.12.5'
    testImplementation 'org.testcontainers:postgresql:1.14.3'
    testImplementation "org.codehaus.groovy:groovy-all:2.5.8"
    testImplementation "cglib:cglib-nodep:3.2.12"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
    testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"


}

processResources {
    filesMatching('**/*.properties') {
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                "project.version": project.version.toString() // nebula release plugin makes project.version a DelayedVersion class so it needs to leverage .toString()
        ])
    }
}

bootRun {
    jvmArgs = [
            "-Dapp.config=/tmp/${rootProject.name}",
            "-Dlogs.dir=/tmp/${rootProject.name}",
            "-Denvironment=${System.getProperty('environment', 'local')}",
            "-Dfile.encoding=UTF-8",
            '-Dshared.logging.appender.name=console'
    ]
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

task version {
    print version
}